NET Architectural Components
https://docs.microsoft.com/en-us/dotnet/standard/components
Types:
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/
	C# is a strongly-typed language
	

Reference Type and Value Types
http://net-informations.com/faq/general/valuetype-referencetype.htm
http://net-informations.com/faq/net/stack-heap.htm

Every type is a value type or reference type
o Use struct to create a value type
o Use class to create a reference type

Value types are usually immutable
o Can not change the value of 4
o Can not change the value of August 9th, 2002

§ Arrays and strings are reference types
o Strings behave like a value type

Anonymous Types
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/anonymous-types

Other:
https://stackoverflow.com/questions/31859016/is-the-use-of-dynamic-considered-a-bad-practice
http://www.dotnettricks.com/learn/csharp/understanding-boxing-and-unboxing-in-csharp
http://www.dotnettricks.com/learn/csharp/difference-between-constant-and-readonly-and-static
http://www.c-sharpcorner.com/UploadFile/c210df/difference-between-const-readonly-and-static-readonly-in-C-Sharp/
http://geekswithblogs.net/BlackRabbitCoder/archive/2010/07/29/c-fundamentals-the-differences-between-struct-and-class.aspx
https://www.codeproject.com/Articles/1456/Enums-and-Structs-in-C

Unboxing is converting a value type to a reference type. Casting is converting a reference type to a reference type or a value type as another value type.
int i = 0;
object o = (object)i; //this is boxing
int i2 = (int)o; //this is unboxing.
long l = (long)i; //this is casting.

